import os, osproc, strutils, streams, termstyle

const clString = "Content-Length:"

if paramCount() != 2:
  echo "NimLSP test runner, run as `runner <nimlsp binary> <log file>`"
  echo "The log files must be generated by a nimlsp instance with"
  echo "-d:debugCommunication enabled. The nimlsp binary being tested doesn't"
  echo "require this flag."

var
  process = startProcess(paramStr(1), options = {})
  ins = process.inputStream
  outs = process.outputStream
  expectedSize = -1

for line in paramStr(2).lines:
  if line.startsWith(">> "):
    echo red line[3..^1]
    ins.write line[3..^1] & "\r\n"
    ins.flush()
  if line.startsWith("<< "):
    echo blue line[3..^1]
    if line.startsWith("<< " & clString):
      let contentLength = outs.readLine()
      echo green contentLength
      doAssert contentLength.startsWith(clString), "Expected content length header, got " & contentLength
      expectedSize = contentLength[clString.len..^1].strip.parseInt
    else:
      if line == "<< ":
        echo yellow outs.readLine()
        continue
      var line2 = outs.readStr(expectedSize)
      expectedSize = -1
      echo yellow line2
      doAssert line[3..^1] == line2, "Expected:\n" & line[3..^1] & "\nBut got:\n" & line2

process.close()
